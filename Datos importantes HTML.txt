#Datos importantes:
-El HTML es el lenguaje de programación para páginas web.
-Todos los términos del lenguage HTML provienen del inglés.
-El programa mas completo según mi busqueda en google era el utilizado por el profesional. (Visual Studio Code)
-Todos los documentos HTML están compuestos por: 
-Elemento HTML 
-Elemento Head (Es el que contiene la meta-información o información adicional que le vamos a 
 otorgar al navegador respecto al documento) 
-La jerarquía del elemento head va desde el 1h (mas importante) hasta el h6 (menos importante)
-Elemento Body 
-La sección "Tittle" es el nombre que tendrá la ventana de la página web 
-El IDENTADO es el espacio que se deja entre los ELEMENTOS
-Atributo es: Información complementaria que se le da a un elemento
-El elemento IMG se cierra en si mismo, esto quiere decir que no tendrá otro /img sino que se cierra en si mismo.
-El elemento de bloque es el que ocupa todo el espacio que tiene disponible, algunos ejemplos son: elemento H1 (2, 3, etc) 
 y elemento p (parrafo). también comienza en un renglón nuevo y los navegadores automáticamente agregan un margen antes y despues
 del elemento.
-si voy a realizar un formulario no debo utilizar el metodo "get".
-es importante a la hora de realizar un formulario utilizar "name" para definir los nombres que tendrán las variables.
-el atributo "controls" le permitirá al usuario reproducir, pausar y ajustar el volumen del video.
-chequear siempre la compatibilidad del elemento "video" a la hora de desarrollar una página con dicho elemento (página en favoritos)
-Para realizar un comentario en HTML debo usar "<!---->
-Los estandares de la web los fija W3C
-La web semántica es MUY IMPORTANTE para la estructura del documento, para sumar visitar y no perderlas, simplemente por el hecho
de como figuran las redes sociales o motores de búsqueda.
-Testear "Facebook Debugger"
-Para hacer enfásis se usa el elemento "strong"
-Si para realizar elecciones no quiero que las opciones esten divididas en círculos puedo usar "checkboxes" que los modifica por
cuadrados a tildar.
Los archivos pueden tener cualquier nombre, pero la mayoría de los servidores van a reconocer al que se llame "index.html" como 
la página de inicio.
-Se pueden realizar comentarios en nuestro documento de css utilizando "/***/"
-la primer y tercer práctica de css explicadas en el bloque 4 de los videos del profe están consideradas malas prácticas, es decir que,
solamente utilizar los ejemplos con css.
-Todos los elementos de HTML pueden ser considerados boxes.¨

*Explicación de cómo esta conformada la estructura de estas "cajas" (Desde adentro hacia afuera):
-Contenido: El contenido propiamente dicho, son los textos e imagenes que aparecen en el documento.
-Padding: Limpia el area al rededor del contenido, el "padding" es transparente, es decir, no se ve.
-Border: Es lo que está al rededor del padding y el contenido
-Margin: Al igual que el padding, limpia el area al rededor del border, también es transparente.
#Aclaración: se pueden establecer las propiedades del padding y el margin por cada uno de los lados.
#Aclaración 2: el orden en el que hay que leer las propiedades que se les dan es, arriba, derecha, abajo e izquierda.

-El asterisco (*) funciona para seleccionar a todos los elementos dentro del documento y les da la propiedad que nosotros elijamos.
-Si utilizo la herramienta del * pero por ejemplo armo un parrafo y le doy el color rojo, se priorizaria el atributo dado 
especificamente al parrafo, es decir, el rojo.
-Se pueden dar otros valores desde el directorio css usando el elemento "section" como en el ejemplo del documento "box model".
-Esto se puede realizar con otros elementos como los elementos parrafo, span o h1.
-Si necesito darle propiedades a (por ejemplo) un parrafo, pero que sean propiedades que no comparta con otros parrafos, debo utilizar
la herramienta ID.
-Responsive web design esta destinado para que los usuarios tengan una experiencia mas completa, es decir, que pueda visualizarse tanto desde pc, como celulares, y hasta 
smart tv.
-El viewport es para definir cuales son las dimensiones que queremos que tome dependiendo el dispositivo desde que se ingrese al sitio.
-Siempre que se haga un sitio responsive, que el usuario tenga que deslizar hacia abajo y arriba, nunca en horizontal. esp empeora la experiencia del usuario.
-Cuando trabajamos con un framework es importante buscar documentacion sobre la version especifica q estamos usando.
-Siempre que realice un commit debo dejar un comentario pequeño pero que referencie los cambios realizados en git.
-el sitio web de git tiene un manual de usuario con todos los comandos del bot.
-a los "comits" siempre se los referencia con los 7 primeros caracteres dentro de la aplicacion.

Razonamiento logico y tecnicas de programacion:
. Evitar duplicar codigo fuente.
. Intentar optimizar mi estilo de programado (lograr en menos pasos el mismo resultado que queria) 
. Para poder empezar a programar, es decir, aprender un nuevo lenguaje de programacion, debo saber diferir si es un lenguaje interpretado o lenguaje compilado.
. El interpretador es un programa que es capaz de analizar e interpretar dichos programas. Traduce el programa desde su descripcion a medida que se va 
ejecutando el codigo fuente. Ej: navegadores web
. El compilador produce un ejecutable con lenguaje de maquina. 

Diferencias:
. En el caso de los compilados, si nosotros cometimos un error al programar, nos va a tirar un error, nos dirá que tenemos un error en la linea especifica del error
y nos pedira una solucion para volver a ejecutarse. En el caso de los lenguajes interpretados, se empezará a interpretar hasta que el programa crashee.
. Es importante destacar que tenemos la obligacion de testear mucho el programa antes de finalizarlo o lanzarlo.